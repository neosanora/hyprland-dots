table inet filter {
    chain input {
        type filter hook input priority 0;
        policy drop;

        # Loopback
        iif "lo" accept;

        # Established connections
        ct state established,related accept;

        # SSH (opsional)
        tcp dport 22 accept;

        # Steam / Source Engine (TF2, CS:GO, dst.)
        tcp dport { 27014-27050, 27036, 27037 } accept;
        udp dport { 27000-27100, 4380 } accept;

        # Minecraft
        tcp dport 25565 accept;
        udp dport 25565 accept;

        # Voice chat (Discord, VoIP)
        tcp dport { 80, 443 } accept;
        udp dport { 80, 443 } accept;

        # DNS
        udp dport 53 accept;
        tcp dport 53 accept;

        # ICMP (ping)
        ip protocol icmp accept;
        ip6 nexthdr icmpv6 accept;
    }

    chain output {
        type filter hook output priority 0;
        policy drop;

        # Loopback
        oif "lo" accept;

        # Established connections
        ct state established,related accept;

        # SSH (opsional)
        tcp dport 22 accept;

        # Steam / Source Engine (TF2, CS:GO, dst.)
        tcp dport { 27014-27050, 27036, 27037 } accept;
        udp dport { 27000-27100, 4380 } accept;

        # Minecraft
        tcp dport 25565 accept;
        udp dport 25565 accept;

        # Voice chat (Discord, VoIP)
        tcp dport { 80, 443 } accept;
        udp dport { 80, 443 } accept;

        # DNS
        udp dport 53 accept;
        tcp dport 53 accept;

        # ICMP (ping)
        ip protocol icmp accept;
        ip6 nexthdr icmpv6 accept;
    }
}

# IPv6 Block (opsional)
table ip6 filter {
    chain input {
        type filter hook input priority 0;
        policy drop;
    }
    chain output {
        type filter hook output priority 0;
        policy drop;
    }
}
